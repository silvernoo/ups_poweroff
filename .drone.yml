kind: pipeline
type: docker
name: default

steps:
  - name: build
    image: golang:1.21-alpine
    environment:
      CGO_ENABLED: 0
    commands:
      - apk add --no-cache git
      - go mod download
      # Linux AMD64
      - GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o dist/ups-poweroff-linux-amd64 .
      # Linux ARM64
      - GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o dist/ups-poweroff-linux-arm64 .
      # Windows AMD64
      - GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o dist/ups-poweroff-windows-amd64.exe .
      # macOS AMD64
      - GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w" -o dist/ups-poweroff-darwin-amd64 .
      # macOS ARM64 (M1/M2)
      - GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w" -o dist/ups-poweroff-darwin-arm64 .
      # 显示构建结果
      - ls -la dist/
    when:
      event:
        - push
        - tag


  # 创建 GitHub Release（仅在 tag 时执行）
  - name: publish
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - dist/*
    when:
      event:
        - tag

trigger:
  branch:
    - master
    - main
    - develop
  event:
    - push
    - tag
